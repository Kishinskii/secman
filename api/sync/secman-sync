#!/bin/bash

ghraw_url="https://raw.githubusercontent.com"
create="gh repo create $SM_GH_UN/.secman -y --private"
SECDIR="$HOME/.secman"
cd_SECDIR="cd $SECDIR"
SM_GH_UN=$(git config user.name)
UNAME=$(uname)

# package managers
brew_gh="brew install gh"
choco_gh="choco install gh"

function usage() {
    local u=(
        "Flags:"
        "   -h | --help: help about any command"
        "Commands:"
        "   sy | sync: create private github repo and sync your passwords on it by git"
        "   cn | clone: clone .secman repo"
        "   ph | push: push and commit a new secret"
        "   pl | pull: pull secret/s"
    )

    printf "%s\n" "${u[@]}"
}

function repo_work() {
    local csi="cgit secman-i"
    local rdm="echo '# My secman passwords - $SM_GH_UN' >> $SECDIR/README.md"

    ${cd_SECDIR}

    git init

    ${rdm}

    ${create}

    ${csi}
}

function repo() {
    if [ -x "$(command -v gh)" ]; then
        repo_work
    else
        if [[ "$UNAME" == Linux || "$UNAME" == Darwin ]]; then
            if [ -x "$(command -v brew)" ]; then
                ${brew_gh}

                if [ -x "$(command -v gh)" ]; then
                    repo_work
                fi
            else
                echo "you must install Homebrew, https://brew.sh"
            fi
        elif [[ "$UNAME" == CYGWIN* || "$UNAME" == MINGW* ]]; then
            if [ -x "$(command -v choco)" ]; then
                ${choco_gh}

                if [ -x "$(command -v gh)" ]; then
                    repo_work
                fi
            else
                echo "you must install Chocolatey, https://chocolatey.org/install"
            fi
        fi
    fi
}

function corgit_ph() {
    local push="cgit ph"

    ${cd_SECDIR}
    ${push}
}

function corgit_pl() {
    ${cd_SECDIR}
    git pull
}

function clonex() {
    local clone="git clone https://github.com/$SM_GH_UN/.secman $SECDIR"

    if [ -d $SECDIR ]; then
        rm -rf $SECDIR
        ${clone}
    else
        ${clone}
    fi
}

function badUsage() {
    local msg="$1"
    local txt=(
        "For an overview of the command, execute:"
        "secman-sync -h"
    )

    [[ $msg ]] && printf "$msg\n"

    printf "%s\n" "${txt[@]}"
}

_phx() {
    ${cd_SECDIR}
    git add .
    git commit -m "new secman password"
    git push
}

version() {
    v="secman ver"

    if [ -x "$(command -v verx)" ]; then
        ${v}
    else
        curl -fsSL $ghraw_url/secman-team/verx/HEAD/install.sh | bash

        if [ -x "$(command -v verx)" ]; then
            ${v}
        fi
    fi
}

if [ $# -eq 0 ]; then
    usage
    exit 0
fi

while (($#)); do
    case "$1" in

    --help | -h)
        usage
        exit 0
        ;;

    --version | -v)
        version
        exit 0
        ;;

    sync | sy)
        repo
        exit 0
        ;;

    clone | cn)
        clonex
        exit 0
        ;;

    push | ph)
        corgit_ph
        exit 0
        ;;

    phx)
        _phx
        exit 0
        ;;

    pull | pl)
        corgit_pl
        exit 0
        ;;

    *)
        badUsage "flag/command not recognized."
        exit 0
        ;;
    esac
done
