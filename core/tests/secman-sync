#!/bin/bash

SM_GH_UN=$(git config user.name)
create="gh repo create $SM_GH_UN/.secman -y --private"
brew_gh="brew install gh"

function usage() {
    local u=(
        "Flags:"
        "   -h | --help: help about any command"
        "   -d: show the description"
        "Commands:"
        "   i: init .git in .secman and create a gh repo for it"
        "   s: show the status of .secman"
        "   ph: push and commit a new secret"
        "   pl: pull secret/s"
    )

    printf "%s\n" "${u[@]}"
}

function repo() {
    local install_brew='/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)")'
    local csi="cgit secman-i"

    if [ -x "$(command -v gh)" ]; then
        cd

        ${create}

        ${csi}
    else
        if [ -x "$(command -v brew)" ]; then
            ${brew_gh}

            if [ -x "$(command -v gh)" ]; then
                cd

                ${create}

                ${csi}
            fi
        else
            ${install_brew}

            if [ -x "$(command -v brew)" ]; then
                ${brew_gh}

                if [ -x "$(command -v gh)" ]; then
                    cd

                    ${create}

                    ${csi}
                fi
            fi
        fi
    fi
}

function corgit-ph() {
    local install_cgit=$(/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Dev-x-Team/corgit/main/setup)")

    if [ -x "$(command -v cgit)" ]; then
        cgit ph
    else
        ${install_cgit}

        if [ -x "$(command -v cgit)" ]; then
            cgit ph
        fi
    fi
}

function corgit-pl() {
    local install_cgit=$(/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Dev-x-Team/corgit/main/setup)")

    if [ -x "$(command -v cgit)" ]; then
        cgit pl
    else
        ${install_cgit}

        if [ -x "$(command -v cgit)" ]; then
            cgit pl
        fi
    fi
}

function clonex() {
    local SECDIR=~/.secman
    local clone="gh repo clone $SM_GH_UN/.secman"

    if [ -d $SECDIR ]; then
        rm -rf $SECDIR
        cd
        ${clone}
    else
        cd
        ${clone}
    fi
}

function badUsage() {
    local msg="$1"
    local txt=(
        "For an overview of the command, execute:"
        "secman-sync -h"
    )

    [[ $msg ]] && printf "$msg\n"

    printf "%s\n" "${txt[@]}"
}

version() {
    r="abdfnx/secman"
    v="verx $r"

    if [ -x "$(command -v verx)" ]; then
        ${v}
    else
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/abdfnx/verx/HEAD/install.sh)"

        if [ -x "$(command -v verx)" ]; then
            ${v}
        fi
    fi
}

while (($#)); do
    case "$1" in

    --help | -h)
        usage
        exit 0
        ;;

    --version | -v)
        version
        exit 0
        ;;

    # --desc | --description | -d)
    #     desc
    #     exit 0
    #     ;;

    sync | s)
        repo
        exit 0
        ;;

    clone)
        clonex
        exit 0
        ;;

    signin)
        secman signin
        exit 0
        ;;

    push | ph)
        corgit-ph
        exit 0
        ;;

    pull | pl)
        corgit-pl
        exit 0
        ;;

    *)
        badUsage "flag/command not recognized."
        exit 0
        ;;
    esac
done
