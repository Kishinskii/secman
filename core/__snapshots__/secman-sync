#!/bin/bash

SM_GH_UN=$(git config user.name)
create="gh repo create $SM_GH_UN/.secman -y --private"
brew_gh="brew install gh"
SECDIR=~/.secman
cd_SECDIR="cd $SECDIR"

# pkgs
url="/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com)""
install_cgit="$url/Dev-x-Team/corgit/main/setup"
install_brew="$url/Homebrew/install/HEAD/install.sh"
install_verx="$url/abdfnx/verx/HEAD/install.sh"

function usage() {
    local u=(
        "Flags:"
        "   -h | --help: help about any command"
        "Commands:"
        "   sy | sync: create private github repo and sync your passwords on it by git"
        "   cn | clone: clone .secman repo"
        "   ph | push: push and commit a new secret"
        "   pl | pull: pull secret/s"
    )

    printf "%s\n" "${u[@]}"
}

function repo() {
    local csi="cgit secman-i"
    local rdm='echo "" >> README.md'

    if [ -x "$(command -v gh)" ]; then
        ${cd_SECDIR}

        ${create}

        ${csi}
    else
        if [ -x "$(command -v brew)" ]; then
            ${brew_gh}

            if [ -x "$(command -v gh)" ]; then
                ${cd_SECDIR}

                ${create}

                ${csi}
            fi
        else
            ${install_brew}

            if [ -x "$(command -v brew)" ]; then
                ${brew_gh}

                if [ -x "$(command -v gh)" ]; then
                    ${cd_SECDIR}

                    ${create}

                    ${csi}
                fi
            fi
        fi
    fi
}

function corgit-ph() {
    local push="cgit ph"

    if [ -x "$(command -v cgit)" ]; then
        ${cd_SECDIR}
        ${push}
    else
        ${install_cgit}

        if [ -x "$(command -v cgit)" ]; then
            ${cd_SECDIR}
            ${push}
        fi
    fi
}

function corgit-pl() {
    local pull="cgit pl"

    if [ -x "$(command -v cgit)" ]; then
        ${cd_SECDIR}
        ${pull}
    else
        ${install_cgit}

        if [ -x "$(command -v cgit)" ]; then
            ${cd_SECDIR}
            ${pull}
        fi
    fi
}

function clonex() {
    local clone="gh repo clone $SM_GH_UN/.secman $SECDIR"

    if [ -d $SECDIR ]; then
        rm -rf $SECDIR
        ${clone}
    else
        ${clone}
    fi
}

function badUsage() {
    local msg="$1"
    local txt=(
        "For an overview of the command, execute:"
        "secman-sync -h"
    )

    [[ $msg ]] && printf "$msg\n"

    printf "%s\n" "${txt[@]}"
}

version() {
    r="abdfnx/secman"
    v="verx $r"

    if [ -x "$(command -v verx)" ]; then
        ${v}
    else
        ${install_verx}

        if [ -x "$(command -v verx)" ]; then
            ${v}
        fi
    fi
}

while (($#)); do
    case "$1" in

    --help | -h)
        usage
        exit 0
        ;;

    --version | -v)
        version
        exit 0
        ;;

    sync | sy)
        repo
        exit 0
        ;;

    clone | cn)
        clonex
        exit 0
        ;;

    push | ph)
        corgit-ph
        exit 0
        ;;

    pull | pl)
        corgit-pl
        exit 0
        ;;

    *)
        badUsage "flag/command not recognized."
        exit 0
        ;;
    esac
done
