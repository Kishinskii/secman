# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1

install_secman: &install_secman
  name: Install Secman
  command: |
    if [ "${PLATFORM}" == "macos" ]; then
      curl -fsSL https://raw.githubusercontent.com/secman-team/install/HEAD/install_osx.sh | bash
    elif [ "${PLATFORM}" == "linux" ]; then
      curl -fsSL https://raw.githubusercontent.com/secman-team/install/HEAD/install_linux.sh | bash
    fi

orbs:
  secrethub: secrethub/cli@1.1.0

linux_env: &linux_env
  PLATFORM: "linux"

osx_env: &osx_env
  PLATFORM: "osx"

jobs:
  secman_linux:
    environment:
      <<: *linux_env
    
    working_directory: "/home"
    
    machine:
      # linux VM
      image: ubuntu-2004:202010-01
    
    steps:
      - checkout
      - run:
          <<: *install_secman
      
      - run:
          name: Clone .secman EX
          command: |
            git clone https://github.com/secman-team/.secman.ex .secman
  
  secman_mac:
    environment:
      <<: *osx_env
    
    working_directory: "/home"

    macos:
      xcode: "12.4.0"

    steps:
      - checkout
      - run:
          <<: *install_secman
      
      - run:
          name: Clone .secman EX
          command: |
            git clone https://github.com/secman-team/.secman.ex .secman

  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9
    environment:
      buildCmd: secrethub://abdfncodex/secman/go-build

    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      - run: cd core && go get -d ./...
      - run: 
          name: Build Secman
          command: |
            curl -fsSL https://raw.githubusercontent.com/abdfnx/verx/HEAD/install.sh | bash
            export ver=$(verx secman-team/secman -l)
            cd core && go build {{ env }} core.go

workflows:
  version: 2.1

  linux_jobs:
    jobs:
      - secman_linux
  
  osx_jobs:
    jobs:
      - secman_mac